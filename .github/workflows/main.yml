# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-  
            ${{ runner.os }}-build-  
            ${{ runner.os }}-

      - name: Install Supernova CLI dependency
        run: npm install --g @supernovaio/cli

      - name: Synchronize tokens with Supernova
        run: >
          supernova sync-tokens  
          --apiKey="${{ secrets.SN_ACCESS_TOKEN_PROD }}"  
          --designSystemId="27928"  
          --tokenFilePath "${{ github.workspace }}/test2/tokens.json"  
          --configFilePath "${{ github.workspace }}/test2/supernova.settings.json"

      - name: Install Figma CLI plugin
        run: npm install -g figma-cli

      - name: Update Figma tokens
        env:
          FIGMA_API_TOKEN: ${{ secrets.FIGMA_API_TOKEN }}
          FIGMA_FILE_ID: tbDiPqorupbdNXoCXMEn2A
          FIGMA_NODE_ID: 103:2029
        run: |
          echo "const tokens = require('./test2/tokens.json');" > update-figma-tokens.js  
          echo "$(cat << 'EOF'  

          const fetch = require('node-fetch');  

          async function updateFigmaTokens(tokens) {  
            const headers = {  
              'Content-Type': 'application/json',  
              'X-Figma-Token': process.env.FIGMA_API_TOKEN,  
            };  

            const newNodeProperties = {  
              properties: {  
                style: {  
                  fills: tokens.fill,  
                  strokes: tokens.stroke,  
                },  
              },  
            };  

            const updateResponse = await fetch(`https://api.figma.com/v1/files/${process.env.FIGMA_FILE_ID}/nodes`, {  
              method: 'POST',  
              headers,  
              body: JSON.stringify({  
                nodes: {  
                  [process.env.FIGMA_NODE_ID]: newNodeProperties,  
                },  
              }),  
            });  

            const updateData = await updateResponse.json();  
            console.log(updateData);  
          }  

          updateFigmaTokens(tokens);  
          EOF  
          )" >> update-figma-tokens.js  
          node update-figma-tokens.js
